{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x2a9e5ce9d08021681268089f0c008301acd84916c189f48e84777f4f3300fb31",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1052291",
    "logsBloom": "0x
    "blockHash": "0x6d48d39edec488da74eb4fc60fff505e164eafb144beaa1dba21b8ba12396ad4",
    "transactionHash": "0x2a9e5ce9d08021681268089f0c008301acd84916c189f48e84777f4f3300fb31",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1052291",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "ab9d629f9a9004cb219aae2a9f132759",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Leo Franklin\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A croud funding decentralized platform\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This implements price feed as a library and check with the real time value of currrency and able to donate the eth\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n/**\\n * @title A croud funding decentralized platform\\n * @author Leo Franklin\\n * @notice This implements price feed as a library and check with the real time value of currrency and able to donate the eth\\n */\\ncontract FundMe {\\n  using PriceConverter for uint256;\\n\\n  mapping(address => uint256) private s_addressToAmountFunded;\\n  address[] private s_funders;\\n  address private immutable i_owner;\\n  uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n  AggregatorV3Interface private s_priceFeed;\\n\\n  constructor(address priceFeedAddress) {\\n    i_owner = msg.sender;\\n    s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n  }\\n\\n  function fund() public payable {\\n    require(\\n      msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n      \\\"You need to spend more ETH!\\\"\\n    );\\n    // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n    s_addressToAmountFunded[msg.sender] += msg.value;\\n    s_funders.push(msg.sender);\\n  }\\n\\n  modifier onlyOwner() {\\n    // require(msg.sender == owner);\\n    if (msg.sender != i_owner) revert FundMe__NotOwner();\\n    _;\\n  }\\n\\n  function withdraw() public payable onlyOwner {\\n    for (\\n      uint256 funderIndex = 0;\\n      funderIndex < s_funders.length;\\n      funderIndex++\\n    ) {\\n      address funder = s_funders[funderIndex];\\n      s_addressToAmountFunded[funder] = 0;\\n    }\\n    s_funders = new address[](0);\\n\\n    (bool callSuccess, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n    require(callSuccess, \\\"Call failed\\\");\\n  }\\n\\n  function cheaperWithdraw() public payable onlyOwner {\\n    address[] memory funders = s_funders;\\n\\n    for (uint256 funderIndex = 0; funderIndex < funders.length; funderIndex++) {\\n      address funder = funders[funderIndex];\\n      s_addressToAmountFunded[funder] = 0;\\n    }\\n\\n    s_funders = new address[](0);\\n\\n    (bool callSuccess, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n    require(callSuccess, \\\"Call failed\\\");\\n  }\\n\\n  fallback() external payable {\\n    fund();\\n  }\\n\\n  receive() external payable {\\n    fund();\\n  }\\n\\n  function getOwner() public view returns (address) {\\n    return i_owner;\\n  }\\n\\n  function getFunder(uint256 index) public view returns (address) {\\n    return s_funders[index];\\n  }\\n\\n  function getAddressToAmountFunded(\\n    address funder\\n  ) public view returns (uint256) {\\n    return s_addressToAmountFunded[funder];\\n  }\\n\\n  function getPriceFeed() public view returns (AggregatorV3Interface) {\\n    return s_priceFeed;\\n  }\\n}\\n\",\"keccak256\":\"0xc994f2dcce05ed00c96597cd72524a12c215694868e5770f00ea0cef9527ce5c\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n  function getPrice(\\n    AggregatorV3Interface priceFeed\\n  ) internal view returns (uint256) {\\n    // ABI\\n    // Address : 0x694AA1769357215DE4FAC081bf1f309aDC325306\\n    // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n    //   0x694AA1769357215DE4FAC081bf1f309aDC325306\\n    // );\\n    (, int256 answer, , , ) = priceFeed.latestRoundData();\\n    return uint256(answer * 1e10);\\n  }\\n\\n  function getConversionRate(\\n    uint256 _ehtAmount,\\n    AggregatorV3Interface priceFeed\\n  ) internal view returns (uint256) {\\n    uint256 ethPrice = getPrice(priceFeed);\\n    uint256 ethAmountInUsd = (ethPrice * _ehtAmount) / 1e18;\\n    return ethAmountInUsd;\\n  }\\n}\\n\",\"keccak256\":\"0xad210e1b0a835e2f6989edb50608b8f18d4284136fd4151625e8f5247a635b87\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200133938038062001339833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c6111ac6200018d60003960008181610335015281816104c8015281816105a4015281816105f401526107ea01526111ac6000f3fe60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610135578063b60d428814610160578063be2693f01461016a578063d7b4750c146101745761008e565b80630343fb25146100985780633ccfd60b146100d55780636b69a592146100df578063893d20e81461010a5761008e565b3661008e5761008c6101b1565b005b6100966101b1565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610ae4565b6102eb565b6040516100cc9190610b2a565b60405180910390f35b6100dd610333565b005b3480156100eb57600080fd5b506100f4610593565b6040516101019190610b2a565b60405180910390f35b34801561011657600080fd5b5061011f6105a0565b60405161012c9190610b54565b60405180910390f35b34801561014157600080fd5b5061014a6105c8565b6040516101579190610bce565b60405180910390f35b6101686101b1565b005b6101726105f2565b005b34801561018057600080fd5b5061019b60048036038101906101969190610c15565b6108b6565b6040516101a89190610b54565b60405180910390f35b6802b5e3af16b18800006101f0600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108fe90919063ffffffff16565b1015610231576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022890610c9f565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461027f9190610cee565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103b8576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610463576000600182815481106103de576103dd610d44565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061045b90610d73565b9150506103bb565b50600067ffffffffffffffff81111561047f5761047e610dbc565b5b6040519080825280602002602001820160405280156104ad5781602001602082028036833780820191505090505b50600190805190602001906104c39291906109da565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161050a90610e1c565b60006040518083038185875af1925050503d8060008114610547576040519150601f19603f3d011682016040523d82523d6000602084013e61054c565b606091505b5050905080610590576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058790610e7d565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610677576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106fb57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106b1575b5050505050905060005b815181101561078557600082828151811061072357610722610d44565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061077d90610d73565b915050610705565b50600067ffffffffffffffff8111156107a1576107a0610dbc565b5b6040519080825280602002602001820160405280156107cf5781602001602082028036833780820191505090505b50600190805190602001906107e59291906109da565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161082c90610e1c565b60006040518083038185875af1925050503d8060008114610869576040519150601f19603f3d011682016040523d82523d6000602084013e61086e565b606091505b50509050806108b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a990610e7d565b60405180910390fd5b5050565b6000600182815481106108cc576108cb610d44565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061090a8361093a565b90506000670de0b6b3a764000085836109239190610e9d565b61092d9190610f26565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561098357600080fd5b505afa158015610997573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109bb9190610fe4565b5050509150506402540be400816109d2919061105f565b915050919050565b828054828255906000526020600020908101928215610a53579160200282015b82811115610a525782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109fa565b5b509050610a609190610a64565b5090565b5b80821115610a7d576000816000905550600101610a65565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ab182610a86565b9050919050565b610ac181610aa6565b8114610acc57600080fd5b50565b600081359050610ade81610ab8565b92915050565b600060208284031215610afa57610af9610a81565b5b6000610b0884828501610acf565b91505092915050565b6000819050919050565b610b2481610b11565b82525050565b6000602082019050610b3f6000830184610b1b565b92915050565b610b4e81610aa6565b82525050565b6000602082019050610b696000830184610b45565b92915050565b6000819050919050565b6000610b94610b8f610b8a84610a86565b610b6f565b610a86565b9050919050565b6000610ba682610b79565b9050919050565b6000610bb882610b9b565b9050919050565b610bc881610bad565b82525050565b6000602082019050610be36000830184610bbf565b92915050565b610bf281610b11565b8114610bfd57600080fd5b50565b600081359050610c0f81610be9565b92915050565b600060208284031215610c2b57610c2a610a81565b5b6000610c3984828501610c00565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610c89601b83610c42565b9150610c9482610c53565b602082019050919050565b60006020820190508181036000830152610cb881610c7c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cf982610b11565b9150610d0483610b11565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d3957610d38610cbf565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d7e82610b11565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610db157610db0610cbf565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610e06600083610deb565b9150610e1182610df6565b600082019050919050565b6000610e2782610df9565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610e67600b83610c42565b9150610e7282610e31565b602082019050919050565b60006020820190508181036000830152610e9681610e5a565b9050919050565b6000610ea882610b11565b9150610eb383610b11565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610eec57610eeb610cbf565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f3182610b11565b9150610f3c83610b11565b925082610f4c57610f4b610ef7565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f7681610f57565b8114610f8157600080fd5b50565b600081519050610f9381610f6d565b92915050565b6000819050919050565b610fac81610f99565b8114610fb757600080fd5b50565b600081519050610fc981610fa3565b92915050565b600081519050610fde81610be9565b92915050565b600080600080600060a0868803121561100057610fff610a81565b5b600061100e88828901610f84565b955050602061101f88828901610fba565b945050604061103088828901610fcf565b935050606061104188828901610fcf565b925050608061105288828901610f84565b9150509295509295909350565b600061106a82610f99565b915061107583610f99565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156110b4576110b3610cbf565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110f1576110f0610cbf565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561112e5761112d610cbf565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561116b5761116a610cbf565b5b82820290509291505056fea26469706673582212201a86ffa760fc7132ba607a1229e1706b124fefce9beb4dbca7e1e9fe2c8abc4764736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610135578063b60d428814610160578063be2693f01461016a578063d7b4750c146101745761008e565b80630343fb25146100985780633ccfd60b146100d55780636b69a592146100df578063893d20e81461010a5761008e565b3661008e5761008c6101b1565b005b6100966101b1565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610ae4565b6102eb565b6040516100cc9190610b2a565b60405180910390f35b6100dd610333565b005b3480156100eb57600080fd5b506100f4610593565b6040516101019190610b2a565b60405180910390f35b34801561011657600080fd5b5061011f6105a0565b60405161012c9190610b54565b60405180910390f35b34801561014157600080fd5b5061014a6105c8565b6040516101579190610bce565b60405180910390f35b6101686101b1565b005b6101726105f2565b005b34801561018057600080fd5b5061019b60048036038101906101969190610c15565b6108b6565b6040516101a89190610b54565b60405180910390f35b6802b5e3af16b18800006101f0600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108fe90919063ffffffff16565b1015610231576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022890610c9f565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461027f9190610cee565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103b8576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610463576000600182815481106103de576103dd610d44565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061045b90610d73565b9150506103bb565b50600067ffffffffffffffff81111561047f5761047e610dbc565b5b6040519080825280602002602001820160405280156104ad5781602001602082028036833780820191505090505b50600190805190602001906104c39291906109da565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161050a90610e1c565b60006040518083038185875af1925050503d8060008114610547576040519150601f19603f3d011682016040523d82523d6000602084013e61054c565b606091505b5050905080610590576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058790610e7d565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610677576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106fb57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106b1575b5050505050905060005b815181101561078557600082828151811061072357610722610d44565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061077d90610d73565b915050610705565b50600067ffffffffffffffff8111156107a1576107a0610dbc565b5b6040519080825280602002602001820160405280156107cf5781602001602082028036833780820191505090505b50600190805190602001906107e59291906109da565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161082c90610e1c565b60006040518083038185875af1925050503d8060008114610869576040519150601f19603f3d011682016040523d82523d6000602084013e61086e565b606091505b50509050806108b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a990610e7d565b60405180910390fd5b5050565b6000600182815481106108cc576108cb610d44565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061090a8361093a565b90506000670de0b6b3a764000085836109239190610e9d565b61092d9190610f26565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561098357600080fd5b505afa158015610997573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109bb9190610fe4565b5050509150506402540be400816109d2919061105f565b915050919050565b828054828255906000526020600020908101928215610a53579160200282015b82811115610a525782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109fa565b5b509050610a609190610a64565b5090565b5b80821115610a7d576000816000905550600101610a65565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ab182610a86565b9050919050565b610ac181610aa6565b8114610acc57600080fd5b50565b600081359050610ade81610ab8565b92915050565b600060208284031215610afa57610af9610a81565b5b6000610b0884828501610acf565b91505092915050565b6000819050919050565b610b2481610b11565b82525050565b6000602082019050610b3f6000830184610b1b565b92915050565b610b4e81610aa6565b82525050565b6000602082019050610b696000830184610b45565b92915050565b6000819050919050565b6000610b94610b8f610b8a84610a86565b610b6f565b610a86565b9050919050565b6000610ba682610b79565b9050919050565b6000610bb882610b9b565b9050919050565b610bc881610bad565b82525050565b6000602082019050610be36000830184610bbf565b92915050565b610bf281610b11565b8114610bfd57600080fd5b50565b600081359050610c0f81610be9565b92915050565b600060208284031215610c2b57610c2a610a81565b5b6000610c3984828501610c00565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610c89601b83610c42565b9150610c9482610c53565b602082019050919050565b60006020820190508181036000830152610cb881610c7c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cf982610b11565b9150610d0483610b11565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d3957610d38610cbf565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610d7e82610b11565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610db157610db0610cbf565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610e06600083610deb565b9150610e1182610df6565b600082019050919050565b6000610e2782610df9565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610e67600b83610c42565b9150610e7282610e31565b602082019050919050565b60006020820190508181036000830152610e9681610e5a565b9050919050565b6000610ea882610b11565b9150610eb383610b11565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610eec57610eeb610cbf565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f3182610b11565b9150610f3c83610b11565b925082610f4c57610f4b610ef7565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f7681610f57565b8114610f8157600080fd5b50565b600081519050610f9381610f6d565b92915050565b6000819050919050565b610fac81610f99565b8114610fb757600080fd5b50565b600081519050610fc981610fa3565b92915050565b600081519050610fde81610be9565b92915050565b600080600080600060a0868803121561100057610fff610a81565b5b600061100e88828901610f84565b955050602061101f88828901610fba565b945050604061103088828901610fcf565b935050606061104188828901610fcf565b925050608061105288828901610f84565b9150509295509295909350565b600061106a82610f99565b915061107583610f99565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156110b4576110b3610cbf565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110f1576110f0610cbf565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561112e5761112d610cbf565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561116b5761116a610cbf565b5b82820290509291505056fea26469706673582212201a86ffa760fc7132ba607a1229e1706b124fefce9beb4dbca7e1e9fe2c8abc4764736f6c63430008080033",
  "devdoc": {
    "author": "Leo Franklin",
    "kind": "dev",
    "methods": {},
    "title": "A croud funding decentralized platform",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This implements price feed as a library and check with the real time value of currrency and able to donate the eth",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 74,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}